% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/post.R
\name{create_story}
\alias{create_story}
\title{create story}
\usage{
create_story(
  name,
  description,
  epic_id,
  owner_ids,
  project_id = NULL,
  workflow_state_id,
  group_id,
  archived = c(FALSE, TRUE),
  story_type = c("feature", "bug", "chore"),
  created_at = Sys.time(),
  estimate = NULL,
  iteration_id = NULL,
  deadline = NULL,
  labels = NULL,
  custom_fields = NA,
  config = list(),
  sc_token = get_token()
)
}
\arguments{
\item{name}{Character (Required). The Story’s name.}

\item{description}{Character (Required). The description of the story.}

\item{epic_id}{Numeric (Required). The ID of the epic the story belongs to. To get the Epic ID, see \code{get_all("epics")$id}}

\item{owner_ids}{List of Strings (Required). An list of UUIDs of the owners of this story.To get the Owner UUID, see \code{get_all("members")$id}}

\item{project_id}{Numeric. The ID of the project the story belongs to. To get the  Project ID, see \code{get_all("projects")$id}. Note projects must be enabled for your team}

\item{workflow_state_id}{Numeric (Required). The ID of the workflow state the story will be in. To get the Workflow State ID, see \code{get_all("workflows")$states$id}}

\item{group_id}{Character (Required). The ID of the group to associate with this story. To get the  Group ID, see \code{get_all("groups")$id}}

\item{archived}{Character (Optional). Controls the story’s archived state. Defaults to FALSE}

\item{story_type}{Character (Optional). The type of story (feature, bug, chore). Defaults to feature.}

\item{created_at}{POSIXct (optional). The time/date the Story was created. Defaults to Sys.time().}

\item{estimate}{Numeric (Optional). The numeric point estimate of the story. Defaults to NULL, which means unestimated.}

\item{iteration_id}{Numeric (Optional). The ID of the iteration the story belongs to. To get the iteration_id, see \code{get_all("iterations")$id}}

\item{deadline}{POSIXct (Optional). The due date of the story.}

\item{labels}{List of Labels (Optional). A list of labels attached to the story.}

\item{custom_fields}{List of Custom Field Values (Optional). A map specifying a CustomField ID and CustomFieldEnumValue ID that represents an assertion of some value for a CustomField.}

\item{config}{(optional) additional configuration to add to header}

\item{sc_token}{shortcut API token.  Defaults to \code{get_token()}}
}
\description{
create story
}
\examples{
\dontrun{
create_story(
  name = "Test Story",
  epic_id = 123,
  owner_ids = list("12345678-9012-3456-7890-123456789012"),
  workflow_state_id = 123,
  project_id = NULL,
  group_id = "12345678-9012-3456-7890-123456789012",
  archived = FALSE,
  story_type = "feature",
  description = "Test Description"
)


label_story <- list(
  list(
      color = '#49a940',
      name = 'in sprint'
    )
    , list(
      color = '#cc5856',
      name = 'new request'
    )
)

create_story(
  name = "Test Story",
  epic_id = 123,
  owner_ids = list("12345678-9012-3456-7890-123456789012"),
  workflow_state_id = 123,
  project_id = 123,
  group_id = "12345678-9012-3456-7890-123456789012",
  archived = FALSE,
  story_type = "feature",
  description = "Test Description",
  labels = label_story
)

custom_field <- list(
  list(
  field_id = "62163760-4716-4b48-85c5-129b410a2857",
  value = "Client - Billable Milestone",
  value_id = "632ce902-8dca-4740-8ba4-5bbfb1dcbdd3"
  )
)
create_story(name = "Test Story with Custom Field"
  , description = "Mileston story"
  , epic_id = 1234
  , owner_ids = list("12345678-9012-3456-7890-123456789012")
  , workflow_state_id = 123
  , group_id = '12345678-9012-3456-7890-123456789012'
  , archived = FALSE
  , story_type = "feature"
  , custom_fields = custom_field
)
}
}
